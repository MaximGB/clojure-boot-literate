#+SETUPFILE: setup.org

* Environtment

  This project template requires Emacs/Org-mode, Clojure, Boot. The project which might be built using this template
  will follow principles of the literate programming, i.e. when program code is extracted from Org files,
  which in turn combine a project documentation and code.

* Code export from org-files.

  To exctract code from org-files into files with *Clojure* source code ~tangle.sh~ file is used [fn:thi-ng-credit].

  Unfortunatelly it's impossible to export code  from Emacs by simply executing *M-x org-babel-tangle*
  call out of the box using this template. The project org-files are using the so called *"Library of Babel"* feature,
  the code of which is inside ~build/lob.org~ file. To initialize the library a call to ~(org-babel-lob-ingest)~
  is required. This call is done inside ~tangle.sh~ file and if you run it from a terminal everything should work
  out of the box. To export code from Emacs you will have to execute src_emacs-lisp{(org-babel-lib-ingest "build/lob.org")}
  call once per session (Emacs run).

  To create ~tangle.sh~ file in the project's root directory place the cursor into the following source code block
  and press C-u C-c C-v t, this will put the code block contents into ~tangle.sh~ file on your disk.

  #+NAME: tangle.sh
  #+BEGIN_SRC shell :tangle ../tangle.sh  :shebang "#!/bin/sh" :noweb yes :results silent
    DIR=`pwd`
    FILES=""

    # wrap each argument in the code required to call tangle on it
    for i in $@; do
        FILES="$FILES \"$i\""
    done

    emacs -Q --batch \
        --eval \
        "(progn
           (require 'package)
           (let ((default-directory package-user-dir))
             (normal-top-level-add-subdirs-to-load-path))
           (require 'cl)(require 'org)(require 'ob)(require 'ob-tangle)(require 'ob-lob)
           (org-babel-lob-ingest \"build/lob.org\")
           (setq org-confirm-babel-evaluate nil)
           (mapc (lambda (file)
                  (find-file (expand-file-name file \"$DIR\"))
                  (org-babel-tangle)
                  (kill-buffer)) '($FILES)))" \
    2>&1 | grep Tangled
  #+END_SRC

  This script receives org-file names which to extract source code from: src_sh{tangle.sh file ...}, where ~file~ is
  name or names of org-files to process.

* Project code export

  To extract project source code from all org-files the ~tangle-all.sh~ shell-script is used [fn:thi-ng-credit].

  To create ~tangle-all.sh~ file in the project's root directory place the cursor into the following source code block
  and press C-u C-c C-v t, this will put the code block contents into ~tangle-all.sh~ file on your disk.

  #+NAME: tangle-all.sh
  #+BEGIN_SRC shell :tangle ../tangle-all.sh  :shebang "#!/bin/sh" :noweb yes :results silent
    ./tangle.sh project.org build/*.org <<get-specification-param(title="Org sources path")>>/*.org
  #+END_SRC

[fn:thi-ng-credit] ~tangle.sh~ and ~tangle-all.sh~ shell-script has been taken from [[https://github.com/thi-ng/babel][thi.ng/babel]] project and adopted to this project a bit.
